{"version":3,"sources":["webpack:///./src/assets/fft.js","webpack:///./src/assets/complex-buffer.js","webpack:///./src/assets/image-buffer-analyse.js","webpack:///./src/assets/image-buffer-generators.js","webpack:///./src/assets/image-buffer-combine.js","webpack:///src/components/Histogram.vue","webpack:///./src/components/Histogram.vue?5e25","webpack:///./src/components/Histogram.vue"],"names":["rearrangeSamples","samples","offset","w","stride","channels","target","pos","k","a","b","tmp","mask","shiftSamples","base","mid","i","inverseFft","real","imag","h","dx","dy","performFft","fft_fft","inverse","pi","Math","PI","j","angularScale","step","delta","sine","sin","fac_r","fac_i","mul_r","mul_i","group","pair","match","p_index","m_index","r","prod_r","prod_i","inc_i","complex_buffer_ComplexBuffer","ComplexBuffer","width","height","buffer","classCallCheck_default","this","Array","image_buffer","length","gamma","uint8","size","p","index","v","pow","complexBuffer","clone","sqrt","atan2","min","max","arguments","undefined","image","createFromImage","createFromImageBuffer","__webpack_exports__","createArray","push","apply","n","shift","d","image_buffer_analyse","plotLine","line","fftData","lineData","y","x","histogram","log","freq","round","LOG10E","scaleBy","image_buffer_generators","factoryGradientPaint","s","factorySinePaint","lines","scaler","factorySpotPaint","diameter","xOffset","yOffset","radius","radiusSquared","factorySoftSpotPaint","diameter1","diameter2","radius1","radius2","factoryCheckPaint","checks","factoryGaussianSpotPaint","exp","normal","str","istr","multiply","screen","darken","lighten","linearBurn","linearDodge","linearLight","overlay","difference","abs","exclusion","image_buffer_combine","other","strength","_combine","method","bufferUint8","otherUint8","Histogram","name","data","loaders","id","generator","beforeDestroy","destroyChildObjects","mounted","_this","jest","loadAllCanvas","addImageRow","loadAndResizeBuffer","imageBuffer","spotBuffer","assign_default","loadFromUnknownType","addBufferRow","constantly","Object","methods","destroy","url","_this2","loader","uint32","callback","createFromImageUrl","resizeTo","_this3","forEach","origCanvas","$refs","histogramCanvas","histograLogmCanvas","line35Canvas","line50Canvas","line20Canvas","loadCanvas","origBuffer","toCanvas","components_Histogram","render","_vm","_h","$createElement","_c","_self","_v","_l","key","staticClass","_s","ref","refInFor","attrs","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext"],"mappings":"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","file":"static/js/9.2a79a0432c2ab96f6ef0.js","sourcesContent":["/* eslint-disable */\r\n\r\nfunction rearrangeSamples(samples, offset, w, stride, channels) {\r\n  var target = 0;\r\n  for (var pos = 0; pos < w; ++pos) {\r\n    if (target > pos) {\r\n      for (var k = 0; k < channels; ++k) {\r\n        var a = offset + target * stride + k;\r\n        var b = offset + pos * stride + k;\r\n        var tmp = samples[a];\r\n        samples[a] = samples[b];\r\n        samples[b] = tmp;\r\n      }\r\n    }\r\n    var mask = w;\r\n    while ((target & (mask >>= 1))) {\r\n      target &= ~mask;\r\n    }\r\n    target |= mask;\r\n  }\r\n}\r\n\r\nfunction shiftSamples(samples, base, w, stride, channels) {\r\n  var mid = base + w * stride / 2;\r\n  for (var i = 0; i < w / 2; ++i) {\r\n    for (var k = 0; k < channels; ++k) {\r\n      var a = base + i * stride + k;\r\n      var b = mid + i * stride + k;\r\n      var tmp = samples[a];\r\n      samples[a] = samples[b];\r\n      samples[b] = tmp;\r\n    }\r\n  }\r\n}\r\n\r\nfunction inverseFft(real, imag, w, h, dx, dy, channels) {\r\n  return performFft(real, imag, w, h, dx, dy, true, channels);\r\n}\r\n\r\nfunction fft(real, imag, w, h, dx, dy, channels) {\r\n  return performFft(real, imag, w, h, dx, dy, false, channels);\r\n}\r\n\r\nfunction performFft(real, imag, w, h, dx, dy, inverse, channels) {\r\n  const pi = Math.PI;\r\n  for (var j = 0; j < h; ++j) {\r\n    if (inverse) {\r\n      shiftSamples(real, j * dy, w, dx, channels);\r\n      shiftSamples(imag, j * dy, w, dx, channels);\r\n    }\r\n\r\n    rearrangeSamples(real, j * dy, w, dx, channels);\r\n    rearrangeSamples(imag, j * dy, w, dx, channels);\r\n\r\n    var angularScale = inverse ? pi : -pi;\r\n    for (var step = 1; step < w; step += step ) {\r\n      var delta = angularScale / step;\r\n      var sine = Math.sin(delta / 2);\r\n      var fac_r = 1;\r\n      var fac_i = 0;\r\n      var mul_r = -2 * sine * sine;\r\n      var mul_i = Math.sin( delta );\r\n      for (var group = 0; group < step; ++group) {\r\n        for (var pair = group; pair < w; pair += step * 2) {\r\n          var match = pair + step;\r\n          for (var k = 0; k < channels; ++k) {\r\n            var p_index = j * dy + pair * dx + k;\r\n            var m_index = j * dy + match * dx + k;\r\n            var r = real[m_index];\r\n            var i = imag[m_index];\r\n\r\n            var prod_r = r * fac_r - i * fac_i;\r\n            var prod_i = r * fac_i + i * fac_r;\r\n\r\n            real[m_index] = real[p_index] - prod_r;\r\n            imag[m_index] = imag[p_index] - prod_i;\r\n            real[p_index] += prod_r;\r\n            imag[p_index] += prod_i;\r\n          }\r\n        }\r\n\r\n        var inc_r = mul_r * fac_r - mul_i * fac_i;\r\n        var inc_i = mul_r * fac_i + mul_i * fac_r;\r\n        fac_r += inc_r;\r\n        fac_i += inc_i;\r\n      }\r\n    }\r\n\r\n    if (!inverse) {\r\n      shiftSamples(real, j * dy, w, dx, channels);\r\n      shiftSamples(imag, j * dy, w, dx, channels);\r\n    }\r\n  }\r\n}\r\n\r\nexport { fft, inverseFft };\n\n\n// WEBPACK FOOTER //\n// ./src/assets/fft.js","/* eslint-disable */\r\n\r\nimport ImageBuffer from './image-buffer';\r\nimport { fft, inverseFft } from './fft';\r\n\r\nclass ComplexBuffer {\r\n  constructor(channels, real, imag, width, height, buffer) {\r\n    this.channels = channels;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.real = real || new Array(width * height * 4);\r\n    this.imag = imag || new Array(width * height * 4);\r\n    this.buffer = buffer || new ImageBuffer(this.width, this.height);\r\n  }\r\n\r\n  static createFromImageBuffer(buffer, channels = 3) {\r\n    const size = buffer.width * buffer.height;\r\n    const real = new Array(buffer.width * buffer.height * 4);\r\n    const imag = new Array(buffer.width * buffer.height * 4);\r\n\r\n    const uint8 = buffer.uint8;\r\n    for (let p = 0; p < size; ++p) {\r\n      for (let k = 0; k < channels; ++k) {\r\n        const index = p * 4 + k;\r\n        real[index] = uint8[index] / 255;\r\n        imag[index] = 0;\r\n      }\r\n    }\r\n    \r\n    return new ComplexBuffer(channels, real, imag, buffer.width, buffer.height, buffer);\r\n  }\r\n\r\n  static createFromImage(image, channels = 3) {\r\n    const buffer = ImageBuffer.createFromImage(image);\r\n    return ComplexBuffer.createFromImageBuffer(buffer, channels);\r\n  }\r\n\r\n  clone() {\r\n    const real = new Array(this.real.length);\r\n    for (let i = 0; i < this.real.length; i++) {\r\n      real[i] = this.real[i];\r\n    }\r\n    const imag = new Array(this.imag.length);\r\n    for (let i = 0; i < this.imag.length; i++) {\r\n      imag[i] = this.imag[i];\r\n    }\r\n    return new ComplexBuffer(this.channels, real, imag, this.width, this.height);\r\n  }\r\n\r\n  toBuffer(gamma) {\r\n    const buffer = new ImageBuffer(this.width, this.height);\r\n    \r\n    const real = this.real;\r\n    const uint8 = buffer.uint8;\r\n    const size = this.width * this.height;\r\n\r\n    for (let p = 0; p < size; ++p) {\r\n      for (let k = 0; k < this.channels; ++k) {\r\n        const index = p * 4 + k;\r\n        let v = real[index];\r\n        v = v < 0 ? 0 : v > 1 ? 1 : v;\r\n        if (gamma) v = Math.pow(v, 1 / gamma);\r\n        uint8[index] = 255 * v;\r\n      }\r\n      uint8[p * 4 + 3] = 255;\r\n    }\r\n\r\n    return buffer;\r\n  }\r\n\r\n  // magnitude = sqrt(real^2+imaginary^2)\r\n  toMaginitude() {\r\n    const complexBuffer = this.clone();\r\n    const real = complexBuffer.real;\r\n    const imag = complexBuffer.imag;\r\n    const size = complexBuffer.width * complexBuffer.height;\r\n\r\n    for (let p = 0; p < size; ++p) {\r\n      for (let k = 0; k < this.channels; ++k) {\r\n        const index = p * 4 + k;\r\n        const r = real[index];\r\n        const i = imag[index];\r\n        real[index] = Math.sqrt(r * r + i * i) / size;\r\n        imag[index] = 0;\r\n      }\r\n    }\r\n\r\n    return complexBuffer;\r\n  }\r\n\r\n  // phase = atan2(imag,real)\r\n  toPhase() {\r\n    const complexBuffer = this.clone();\r\n    const real = complexBuffer.real;\r\n    const imag = complexBuffer.imag;\r\n    const size = complexBuffer.width * complexBuffer.height;\r\n    const pi = Math.PI;\r\n\r\n    for (let p = 0; p < size; ++p) {\r\n      for (let k = 0; k < this.channels; ++k) {\r\n        const index = p * 4 + k;\r\n        const r = real[index];\r\n        const i = imag[index];\r\n        real[index] = Math.atan2(i, r) / pi / 2 + 0.5; // atan2 then scale -pi...+pi to 0...1;\r\n        imag[index] = 0;\r\n      }\r\n    }\r\n\r\n    return complexBuffer;\r\n  }\r\n\r\n  ifft() {\r\n    const complexBuffer = this.clone();\r\n    const w = complexBuffer.width;\r\n    const h = complexBuffer.height;\r\n    const real = complexBuffer.real;\r\n    const imag = complexBuffer.imag;\r\n\r\n    inverseFft(real, imag, w, h, 4, w * 4, this.channels);\r\n    inverseFft(real, imag, h, w, w * 4, 4, this.channels);\r\n\r\n    // inverseFft on ComplexBuffer data scales the data by (w * h), i'm not sure why. Scaling back here makes the data work better in more places.\r\n    const size = w * h;\r\n    for (let p = 0; p < size; ++p) {\r\n      for (let k = 0; k < this.channels; ++k) {\r\n        const index = p * 4 + k;\r\n        real[index] = real[index] / size;\r\n        imag[index] = 0;\r\n      }\r\n    }\r\n\r\n    return complexBuffer;\r\n  }\r\n\r\n  fft() {\r\n    const complexBuffer = this.clone();\r\n    const w = complexBuffer.width;\r\n    const h = complexBuffer.height;\r\n    const real = complexBuffer.real;\r\n    const imag = complexBuffer.imag;\r\n\r\n    fft(real, imag, w, h, 4, w * 4, this.channels);\r\n    fft(real, imag, h, w, w * 4, 4, this.channels);\r\n\r\n    return complexBuffer;\r\n  }\r\n\r\n  autoContrast() {\r\n    const complexBuffer = this.clone();\r\n    const real = complexBuffer.real;\r\n    const w = complexBuffer.width;\r\n    const h = complexBuffer.height;\r\n    const size = w * h;\r\n    const min = [1, 1, 1, 1], max = [0, 0, 0, 0];\r\n    for (let p = 0; p < size; ++p) {\r\n      for (let k = 0; k < this.channels; ++k) {\r\n        const index = p * 4 + k;\r\n        const r = real[index];\r\n        min[k] = Math.min(r, min[k]);\r\n        max[k] = Math.max(r, max[k]);\r\n      }\r\n    }\r\n\r\n    for (let p = 0; p < size; ++p) {\r\n      for (let k = 0; k < this.channels; ++k) {\r\n        const index = p * 4 + k;\r\n        real[index] = (real[index] - min[k]) / (max[k] - min[k]);\r\n      }\r\n    }\r\n\r\n    return complexBuffer;\r\n  }\r\n}\r\n\r\nexport default ComplexBuffer;\n\n\n// WEBPACK FOOTER //\n// ./src/assets/complex-buffer.js","/* eslint-disable */\r\n\r\n/**\r\n * Create an array with one or more dimensions.\r\n * @param integer size Size of first dimension of the array.\r\n * @param {...integer} size Sizes of subsequent dimensions of the array.\r\n * @param function|value item Item to be stored in each element in the array or a function to call to fetch one.\r\n */\r\nfunction createArray() {\r\n  var a = [];\r\n  a.push.apply(a, arguments); \r\n  var n = a.shift(0);\r\n  if (a.length === 0) return typeof n === 'function' ? n() : n;\r\n  var d = [];\r\n  for (var i = 0; i < n; i++) {\r\n    d.push(createArray.apply(this, a));\r\n  }\r\n  return d;\r\n}\r\n\r\nconst imageBufferAnalyse = {\r\n  plotLine(line) {\r\n    const channels = 3;\r\n    \r\n    var fftData = this.clone();\r\n    var uint8 = fftData.uint8;\r\n    var w = fftData.width;\r\n    var h = fftData.height;\r\n    var size = w * h;\r\n    var lineData = createArray(0, w * 4);\r\n    var offset = line * w * 4;\r\n    for (var p = 0; p < w * 4; ++p) {\r\n      lineData[p] = uint8[offset + p];\r\n    }\r\n\r\n    for (var p = 0; p < size; ++p) {\r\n      for (var k = 0; k < channels; ++k) {\r\n        var index = p * 4 + k;\r\n        var y =  (p / w) / h;\r\n        var x = p % w;\r\n        uint8[index] = (255 - lineData[x * 4 + k]) < y * 255 ? 255 : 0;\r\n      }\r\n    }\r\n    \r\n    return fftData;\r\n  },\r\n\r\n  histogram(log) {\r\n    const channels = 3;\r\n\r\n    var buffer = this.clone();\r\n    var uint8 = buffer.uint8;\r\n    var w = buffer.width;\r\n    var h = buffer.height;\r\n    var size = w * h;\r\n\r\n    var freq = createArray(channels, w, 0);\r\n    for (var p = 0; p < size; ++p) {\r\n      for (var k = 0; k < channels; ++k) {\r\n        var index = p * 4 + k;\r\n        freq[k][Math.round(uint8[index] / 255 * (w - 1))]++;\r\n      }\r\n    }\r\n\r\n    if (log) {\r\n      for (var p = 0; p < w; ++p) {\r\n        for (var k = 0; k < channels; ++k) {\r\n          var index = p * 4 + k;\r\n          freq[k][p] = Math.log(freq[k][p]) * Math.LOG10E;\r\n          freq[k][p] = freq[k][p];\r\n        }\r\n      }\r\n    }\r\n\r\n    var scaleBy = size;\r\n    scaleBy = 0;\r\n    for (var p = 0; p < w; ++p) {\r\n      for (var k = 0; k < channels; ++k) {\r\n        scaleBy = Math.max(freq[k][p], scaleBy);\r\n      }\r\n    }\r\n\r\n    for (var p = 0; p < size; ++p) {\r\n      for (var k = 0; k < channels; ++k) {\r\n        var index = p * 4 + k;\r\n        var x = p % w;\r\n        var y = ~~(p / w);\r\n        \r\n        uint8[index] = (h - freq[k][x] / scaleBy * h) < y ? 255 : 0;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  }\r\n}\r\n\r\nexport default imageBufferAnalyse;\n\n\n// WEBPACK FOOTER //\n// ./src/assets/image-buffer-analyse.js","/* eslint-disable */\r\n\r\nconst imageBufferGenerators = {\r\n  factoryGradientPaint() {\r\n    return function(i, w, h, s) {\r\n      var x = (i % w) / (w - 1);\r\n      var y = ~~(i / w) / (h - 1);\r\n      var r = 255 * y;\r\n      var g = 255 * x;\r\n      var b = 0;\r\n      return (255 << 24) |\r\n        (b << 16) |\r\n        (g << 8) |\r\n        r;\r\n    }\r\n  },\r\n\r\n  factorySinePaint(lines) {\r\n    lines = lines || 1;\r\n    var scaler = lines * 2 * Math.PI;\r\n    return function(i, w, h, s) {\r\n      var x = (i % w) / (w - 1);\r\n      var b = Math.sin(scaler * x) * 127.5 + 127.5;\r\n      return (255 << 24) |\r\n        (b << 16) |\r\n        (b << 8) |\r\n        b;\r\n    }\r\n  },\r\n\r\n\tfactorySpotPaint(diameter, xOffset, yOffset) {\r\n\t\tdiameter = diameter || 1\r\n\t\txOffset = xOffset || 0;\r\n\t\tyOffset = yOffset || 0;\r\n\t\tvar radius = diameter / 2;\r\n\t\tvar radiusSquared = radius * radius;\r\n\t\treturn function(i, w, h, s) {\r\n\t\t\tvar x = (i % w) / (w - 1) - 0.5 + xOffset;\r\n\t\t\tvar y = ~~(i / w) / (h - 1) - 0.5 + yOffset;\r\n\r\n\t\t\tvar b = (x * x + y * y) > radiusSquared ? 0 : 255;\r\n\r\n\t\t\treturn (255 << 24) |\r\n\t\t\t\t(b << 16) |\r\n\t\t\t\t(b << 8) |\r\n\t\t\t\tb;\r\n\t\t}\r\n\t},\r\n\r\n\tfactorySoftSpotPaint(diameter1, diameter2, xOffset, yOffset) {\r\n\t\tdiameter1 = diameter1 || 1\r\n\t\tdiameter2 = diameter2 || 0.5\r\n\t\txOffset = xOffset || 0;\r\n\t\tyOffset = yOffset || 0;\r\n\t\tvar radius1 = diameter1 / 2;\r\n\t\tvar radius2 = diameter2 / 2;\r\n\t\txOffset = xOffset - 0.5;\r\n\t\tyOffset = yOffset - 0.5;\r\n\t\treturn function(i, w, h, s) {\r\n\t\t\tvar x = ((i % w) / (w - 1) + xOffset)  ;\r\n\t\t\tvar y = (~~(i / w) / (h - 1) + yOffset);\r\n\r\n\t\t\tvar p = Math.sqrt(x * x + y * y);\r\n\t\t\tvar b = p > radius1 ?\r\n\t\t\t\t0 :\r\n\t\t\t\tp > radius2 ?\r\n\t\t\t\t\t 255 * (p - radius1) / (radius2 - radius1) :\r\n\t\t\t\t\t255;\r\n\r\n\t\t\treturn (255 << 24) |\r\n\t\t\t\t(b << 16) |\r\n\t\t\t\t(b << 8) |\r\n\t\t\t\tb;\r\n\t\t}\r\n\t},\r\n\r\n\tfactoryCheckPaint(checks) {\r\n\t\tchecks = checks || 8;\r\n\t\treturn function(i, w, h, s) {\r\n\t\t\tvar x = (i % w) / w;\r\n\t\t\tvar y = ~~(i / w) / h;\r\n\t\t\tvar b = ((~~(checks * x) + ~~(checks * y) + 1) % 2) * 255;\r\n\t\t\treturn (255 << 24) |\r\n\t\t\t\t(b << 16) |\r\n\t\t\t\t(b << 8) |\r\n\t\t\t\tb;\r\n\t\t}\r\n\t},\r\n\r\n\tfactoryGaussianSpotPaint() {\r\n\t\treturn function(i, w, h, s) {\r\n\t\t\tvar x = ((i % w) / (w - 1) - 0.5);\r\n\t\t\tvar y = (~~(i / w) / (h - 1) - 0.5);\r\n\r\n\t\t\t// by pluging values int the Gaussian function http://en.wikipedia.org/wiki/Gaussian_function\r\n\t\t\tvar n = Math.exp(x * x / -0.03125);\r\n\t\t\tvar m = Math.exp(y * y / -0.03125);\r\n\r\n\t\t\tvar b = n * m * 255;\r\n\t\t\treturn (255 << 24) |\r\n\t\t\t\t(b << 16) |\r\n\t\t\t\t(b << 8) |\r\n\t\t\t\tb;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default imageBufferGenerators;\n\n\n// WEBPACK FOOTER //\n// ./src/assets/image-buffer-generators.js","/* eslint-disable */\r\n\r\nimport canvasColor from './canvas-color';\r\n\r\nconst normal = (a, b, str, istr) => (a * istr + b * str);\r\nconst multiply = (a, b, str, istr) => a * (istr + b * str);\r\nconst screen = (a, b, str, istr) => 1 - (1 - a) * (istr + (1 - b) * str);\r\nconst darken = (a, b, str, istr) => a * istr + Math.min(a, b) * str;\r\nconst lighten = (a, b, str, istr) => a * istr + Math.max(a, b) * str;\r\nconst linearBurn = (a, b, str, istr) => a - 1 + b;\r\nconst linearDodge = (a, b, str, istr) => a + b * str;\r\nconst linearLight = (a, b, str, istr) => (a + (2 * b - 1));\r\nconst overlay = (a, b, str, istr) => 0.5 + (2 * a - 1) + (2 * b - 1) / 2;\r\nconst difference = (a, b, str, istr) => Math.abs(a - b);\r\nconst exclusion = (a, b, str, istr) => 1 - ((2 * a - 1) * (2 * b - 1) + 1) / 2;\r\n\r\nconst imageBufferCombine = {\r\n  normal: function(other, strength, channels = 3) {\r\n    return this._combine(other, normal, strength, channels);\r\n  },\r\n  multiply: function(other, strength, channels = 3) {\r\n    return this._combine(other, multiply, strength, channels);\r\n  },\r\n  screen: function(other, strength, channels = 3) {\r\n    return this._combine(other, screen, strength, channels);\r\n  },\r\n  darken: function(other, strength, channels = 3) {\r\n    return this._combine(other, darken, strength, channels);\r\n  },\r\n  lighten: function(other, strength, channels = 3) {\r\n    return this._combine(other, lighten, strength, channels);\r\n  },\r\n  linearBurn: function(other, strength, channels = 3) {\r\n    return this._combine(other, linearBurn, strength, channels);\r\n  },\r\n  linearDodge: function(other, strength, channels = 3) {\r\n    return this._combine(other, linearDodge, strength, channels);\r\n  },\r\n  linearLight: function(other, strength, channels = 3) {\r\n    return this._combine(other, linearLight, strength, channels);\r\n  },\r\n  overlay: function(other, strength, channels = 3) {\r\n    return this._combine(other, overlay, strength, channels);\r\n  },\r\n  difference: function(other, strength, channels = 3) {\r\n    return this._combine(other, difference, strength, channels);\r\n  },\r\n  exclusion: function(other, strength, channels = 3) {\r\n    return this._combine(other, exclusion, strength, channels);\r\n  },\r\n  _combine: function(other, method, strength = 0.5, channels = 3) {\r\n    const buffer = this.clone();\r\n    const bufferUint8 = buffer.uint8;\r\n    const otherUint8 = other.uint8;\r\n    const size = buffer.width * buffer.height;\r\n    const str = strength, istr = 1 - strength;\r\n\r\n    for (let p = 0; p < size; ++p) {\r\n      for (let k = 0; k < channels; ++k) {\r\n        const index = p * 4 + k;\r\n        bufferUint8[index] = 255 * method(bufferUint8[index] / 255, otherUint8[index] / 255, str, istr);\r\n      }\r\n    }\r\n    return buffer;\r\n  }\r\n}\r\n\r\nexport default imageBufferCombine;\n\n\n// WEBPACK FOOTER //\n// ./src/assets/image-buffer-combine.js","<template>\n  <section>\n    <h1>Histogram</h1>\n    <p>Experiments with image generation, image combines and Histogram in javascript.</p>\n\n    <div\n      v-for=\"(loader, id) in loaders\"\n      :key=\"loader.id\"\n      class=\"row\">\n      <h2>{{ loader.id }}</h2>\n      <div class=\"box\">\n        Original<br >\n        <canvas\n          :ref=\"'origCanvas_' + id\"\n          class=\"orig-canvas\"\n          width=\"100\"\n          height=\"100\" />\n      </div>\n\n      <div class=\"box\">\n        Histogram<br >\n        <canvas\n          :ref=\"'histogramCanvas_' + id\"\n          class=\"histogram-canvas\"\n          width=\"100\"\n          height=\"100\" />\n      </div>\n\n      <div class=\"box\">\n        Log10 Hist.<br >\n        <canvas\n          :ref=\"'histogramLogCanvas_' + id\"\n          class=\"histogram-log-canvas\"\n          width=\"100\"\n          height=\"100\" />\n      </div>\n\n      <div class=\"box\">\n        Line 20<br >\n        <canvas\n          :ref=\"'line20Canvas_' + id\"\n          class=\"line-20-canvas\"\n          width=\"100\"\n          height=\"100\" />\n      </div>\n\n      <div class=\"box\">\n        Line 35<br >\n        <canvas\n          :ref=\"'line35Canvas_' + id\"\n          class=\"line-35-canvas\"\n          width=\"100\"\n          height=\"100\" />\n      </div>\n\n      <div class=\"box\">\n        Line 50<br >\n        <canvas\n          :ref=\"'line50Canvas_' + id\"\n          class=\"line-50-canvas\"\n          width=\"100\"\n          height=\"100\" />\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\n/* eslint-disable */\n\nimport ComplexBuffer from \"../assets/complex-buffer\";\nimport CanvasWriter from \"../assets/canvas-writer\";\nimport ImageBuffer from \"../assets/image-buffer\";\nimport imageBufferAnalyse from \"../assets/image-buffer-analyse\";\nimport imageBufferGenerators from \"../assets/image-buffer-generators\";\nimport imageBufferCombine from \"../assets/image-buffer-combine\";\nimport { constantly } from \"../assets/constantly\";\n\nexport default {\n  name: \"Fft\",\n  data() {\n    return {\n      loaders: [\n        {\n          id: \"gradientPaint()\",\n          generator: imageBufferGenerators.factoryGradientPaint()\n        },\n        {\n          id: \"sinePaint(4)\",\n          generator: imageBufferGenerators.factorySinePaint(4)\n        },\n        {\n          id: \"gaussianSpotPaint()\",\n          generator: imageBufferGenerators.factoryGaussianSpotPaint()\n        },\n        {\n          id: \"checkPaint(8)\",\n          generator: imageBufferGenerators.factoryCheckPaint(8)\n        },\n        {\n          id: \"softSpotPaint(1, 0.5, 0.3, 0.3)\",\n          generator: imageBufferGenerators.factorySoftSpotPaint(\n            1,\n            0.5,\n            0.3,\n            0.3\n          )\n        },\n        {\n          id: \"spotPaint(0.8, 0, 0)\",\n          generator: imageBufferGenerators.factorySpotPaint(0.8, 0, 0)\n        }\n      ]\n    };\n  },\n  beforeDestroy() {\n    this.destroyChildObjects();\n  },\n  mounted() {\n    if (typeof jest !== \"undefined\") return;\n    this.loadAllCanvas();\n    this.addImageRow(\"lena\", \"/static/sample-images/lena.png\");\n    this.addImageRow(\"clown\", \"/static/sample-images/clown.jpg\");\n    this.addImageRow(\"twigs\", \"/static/sample-images/twigs.jpg\");\n\n    this.loadAndResizeBuffer(\"/static/sample-images/lena.png\", imageBuffer => {\n      const spotBuffer = Object.assign(\n        new ImageBuffer(80, 80),\n        imageBufferAnalyse\n      );\n      spotBuffer.loadFromUnknownType(\n        imageBufferGenerators.factoryGaussianSpotPaint()\n      );\n\n      imageBuffer = Object.assign(imageBuffer, imageBufferCombine);\n\n      this.addBufferRow(\n        \"normal(lena, spot, 0.5)\",\n        imageBuffer.normal(spotBuffer, 0.5)\n      );\n      this.addBufferRow(\n        \"multiply(lena, spot, 0.5)\",\n        imageBuffer.multiply(spotBuffer, 0.5)\n      );\n      this.addBufferRow(\n        \"screen(lena, spot, 0.5)\",\n        imageBuffer.screen(spotBuffer, 0.5)\n      );\n      this.addBufferRow(\n        \"darken(lena, spot, 0.5)\",\n        imageBuffer.darken(spotBuffer, 0.5)\n      );\n      this.addBufferRow(\n        \"lighten(lena, spot, 0.5)\",\n        imageBuffer.lighten(spotBuffer, 0.5)\n      );\n      this.addBufferRow(\n        \"linearBurn(lena, spot, 0.5)\",\n        imageBuffer.linearBurn(spotBuffer, 0.5)\n      );\n      this.addBufferRow(\n        \"linearDodge(lena, spot, 0.5)\",\n        imageBuffer.linearDodge(spotBuffer, 0.5)\n      );\n      this.addBufferRow(\n        \"linearLight(lena, spot, 0.5)\",\n        imageBuffer.linearLight(spotBuffer, 0.5)\n      );\n      this.addBufferRow(\n        \"overlay(lena, spot, 0.5)\",\n        imageBuffer.overlay(spotBuffer, 0.5)\n      );\n      this.addBufferRow(\n        \"difference(lena, spot, 0.5)\",\n        imageBuffer.difference(spotBuffer, 0.5)\n      );\n      this.addBufferRow(\n        \"exclusion(lena, spot, 0.5)\",\n        imageBuffer.exclusion(spotBuffer, 0.5)\n      );\n    });\n\n    this.constantly = constantly(() => this.loadAllCanvas(), 5);\n  },\n  methods: {\n    destroyChildObjects() {\n      if (this.constantly) this.constantly.destroy();\n    },\n    addImageRow(id, url) {\n      const loader = {\n        id: id\n      };\n      this.loaders.push(loader);\n      this.loadAndResizeBuffer(url, imageBuffer => {\n        loader.generator = imageBuffer.uint32;\n        this.addBufferRow(id + \"-buffer\", imageBuffer);\n      });\n    },\n    loadAndResizeBuffer(url, callback) {\n      ImageBuffer.createFromImageUrl(url, imageBuffer => {\n        imageBuffer.resizeTo(80, 80);\n        callback(imageBuffer);\n      });\n    },\n    addBufferRow(id, imageBuffer) {\n      this.loaders.push({\n        id: id,\n        generator: imageBuffer.uint32\n      });\n    },\n    loadAllCanvas() {\n      this.loaders.forEach((loader, id) => {\n        if (loader.generator && !loader.origCanvas) {\n          loader.origCanvas = this.$refs[\"origCanvas_\" + id][0];\n          loader.histogramCanvas = this.$refs[\"histogramCanvas_\" + id][0];\n          loader.histograLogmCanvas = this.$refs[\"histogramLogCanvas_\" + id][0];\n          loader.line35Canvas = this.$refs[\"line35Canvas_\" + id][0];\n          loader.line50Canvas = this.$refs[\"line50Canvas_\" + id][0];\n          loader.line20Canvas = this.$refs[\"line20Canvas_\" + id][0];\n          this.loadCanvas(loader);\n        }\n      });\n    },\n    loadCanvas(loader) {\n      const origBuffer = Object.assign(\n        new ImageBuffer(80, 80),\n        imageBufferAnalyse\n      );\n      origBuffer.loadFromUnknownType(loader.generator);\n      origBuffer.toCanvas(loader.origCanvas);\n      origBuffer.histogram().toCanvas(loader.histogramCanvas);\n      origBuffer.histogram(true).toCanvas(loader.histograLogmCanvas);\n      origBuffer.plotLine(35).toCanvas(loader.line35Canvas);\n      origBuffer.plotLine(50).toCanvas(loader.line50Canvas);\n      origBuffer.plotLine(20).toCanvas(loader.line20Canvas);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\ncanvas {\n  border: 1px solid #ccc;\n}\n\n.row {\n  display: inline-block;\n  margin-right: 12px;\n  border: 1px solid shade(0.8);\n  border-radius: 10px;\n  box-shadow: 1px 1px 10px shade(0.8);\n  margin-bottom: 12px;\n  padding: 10px 12px 5px 12px;\n  h2 {\n    font-size: 1.5em;\n    margin-bottom: 0;\n  }\n  .box {\n    padding: 5px;\n    display: block;\n    float: left;\n    &:nth-of-type(4) {\n      clear: left;\n    }\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Histogram.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('h1',[_vm._v(\"Histogram\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Experiments with image generation, image combines and Histogram in javascript.\")]),_vm._v(\" \"),_vm._l((_vm.loaders),function(loader,id){return _c('div',{key:loader.id,staticClass:\"row\"},[_c('h2',[_vm._v(_vm._s(loader.id))]),_vm._v(\" \"),_c('div',{staticClass:\"box\"},[_vm._v(\"\\n      Original\"),_c('br'),_vm._v(\" \"),_c('canvas',{ref:'origCanvas_' + id,refInFor:true,staticClass:\"orig-canvas\",attrs:{\"width\":\"100\",\"height\":\"100\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"box\"},[_vm._v(\"\\n      Histogram\"),_c('br'),_vm._v(\" \"),_c('canvas',{ref:'histogramCanvas_' + id,refInFor:true,staticClass:\"histogram-canvas\",attrs:{\"width\":\"100\",\"height\":\"100\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"box\"},[_vm._v(\"\\n      Log10 Hist.\"),_c('br'),_vm._v(\" \"),_c('canvas',{ref:'histogramLogCanvas_' + id,refInFor:true,staticClass:\"histogram-log-canvas\",attrs:{\"width\":\"100\",\"height\":\"100\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"box\"},[_vm._v(\"\\n      Line 20\"),_c('br'),_vm._v(\" \"),_c('canvas',{ref:'line20Canvas_' + id,refInFor:true,staticClass:\"line-20-canvas\",attrs:{\"width\":\"100\",\"height\":\"100\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"box\"},[_vm._v(\"\\n      Line 35\"),_c('br'),_vm._v(\" \"),_c('canvas',{ref:'line35Canvas_' + id,refInFor:true,staticClass:\"line-35-canvas\",attrs:{\"width\":\"100\",\"height\":\"100\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"box\"},[_vm._v(\"\\n      Line 50\"),_c('br'),_vm._v(\" \"),_c('canvas',{ref:'line50Canvas_' + id,refInFor:true,staticClass:\"line-50-canvas\",attrs:{\"width\":\"100\",\"height\":\"100\"}})])])})],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7bc59c98\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Histogram.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7bc59c98\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"includePaths\\\":[\\\"./src/styles\\\",\\\"./node_modules/bootstrap/scss\\\",\\\"./node_modules/bootstrap/dist/css\\\"],\\\"data\\\":\\\"@import \\\\\\\"_main.scss\\\\\\\";\\\",\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Histogram.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Histogram.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Histogram.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7bc59c98\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Histogram.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7bc59c98\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Histogram.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}